$ sudo apt-get install libcupti-dev 

sudo apt-get install pkg-config zip g++ zlib1g-dev unzip

git clone https://github.com/tensorflow/tensorflow 
cd tensorflow
git checkout

sudo apt-get install python3-numpy python3-dev python3-pip python3-wheel

sudo apt-get autoremove openjdk-9-jre-headless
sudo apt-get remove default-jdk
sudo apt-get purge openjdk-9-jre-headless gcj-4.9-jre-headless

sudo apt-get install openjdk-8-jdk
echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
sudo apt-get update && sudo apt-get install bazel
sudo apt-get upgrade bazel

python3
>>> import sys
>>> print(sys.executable)
>>> print(sys.path)
$ which gcc
/usr/bin/gcc
gcc --version
g++ --version

sudo apt-get install gcc-5
sudo apt-get install g++-5

sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10

After compiling TensorFlow you can use previous version of gcc calling above command with proper path to /usr/bin/gcc-5.x

sudo ln -s /usr/bin/gcc-5 /usr/local/cuda/bin/gcc
sudo ln -s /usr/bin/g++-5 /usr/local/cuda/bin/g++

./configure
sudo bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
sudo bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg
cd ..
sudo pip install /tmp/tensorflow_pkg/tensorflow-1.3.0-cp35-cp35m-linux_x86_64.whl
