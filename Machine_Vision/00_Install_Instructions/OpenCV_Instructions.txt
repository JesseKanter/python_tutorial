# Update any available packages
$ sudo apt-get update
$ sudo apt-get upgrade
# Installer from earlier release
$ echo "deb http://us.archive.ubuntu.com/ubuntu/ yakkety universe" | sudo tee -a /etc/apt/sources.list
$ echo "deb http://mirrors.kernel.org/ubuntu/pool/main/libp/libpng/ xenial main" | sudo tee -a /etc/apt/sources.list
$ sudo apt-get update
# Install developer tools for compiling OpenCV 3.0
$ sudo apt-get install -y build-essential cmake git python3.5-dev libatlas-base-dev gfortran python3-pip libgtk2.0-dev pkg-config libjpeg8-dev libtiff5-dev libjasper-dev libpng-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgphoto2-dev gstreamer1.0-dev libdc1394-22 ffmpeg libavresample-dev

-- Use this for face_recognition --

sudo apt-get -qq install build-essential checkinstall cmake pkg-config yasm libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev gstreamer1.0-dev gstreamer-plugins-base1.0-dev libv4l-dev python-dev python-numpy libtbb-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils

-- Compile ffmpeg from source --

## Non-free flag will make the ffmpeg package non-distributable
git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg
--OR--
wget http://ffmpeg.org/releases/ffmpeg-3.3.4.tar.gz
tar -xzf ffmpeg-3.3.4.tar.xz

cd ffmpeg
./configure --enable-nonfree --enable-pic --enable-shared
sudo make
sudo make install

# To fix videodev.h missing error
# Generate a symbolic link
$ sudo ln -s /usr/include/libv4l1-videodev.h   /usr/include/linux/videodev.h 
# Fix python.h missing error
# Copy headers from python3.5m to include folder
$ sudo cp /usr/include/python3.5m/* /usr/include/
# Install dependencies for setting up a virtual environment
# Install OpenCV 3.0 and Python 3.4+ on UbuntuShell
$ sudo pip3 install virtualenv virtualenvwrapper
# Update ~/.bashrc file
# virtualenv and virtualenvwrapper
$ sudo nano ~/.bashrc
# Paste the following
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
# Reload ~./bashrc file for enforcing the changes
$ source ~/.bashrc
# Create a virtual environment called OpenCV
$ mkvirtualenv OpenCV
# Install numpy for math calculations
$ sudo rm -rf ~/.cache/pip/
$ pip install numpy
---OR---
$ sudo pip3 install -U numpy 

-- Clone and install OpenCV from source --

# Clone the github OpenCV repository
$ cd ~
$ git clone https://github.com/opencv/opencv.git
$ cd opencv
$ git checkout 3.1.0
---OR---
# For the latest version from GitHub
$ git checkout 
# Clone the github OpenCV contribute repository for access to standard keypoint detectors and local invariant descriptors (such as SIFT, SURF, etc.) and newer OpenCV 3.0 features like text detection
$ cd ~
$ git clone https://github.com/opencv/opencv_contrib.git
$ cd opencv_contrib
$ git checkout 3.1.0

---OR---

# For the latest version from GitHub
$ git checkout

# Build the OpenCV installer using CMake

$ cd ~/opencv
$ mkdir build
$ cd build
$ sudo cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_C_EXAMPLES=ON \
	-D INSTALL_PYTHON_EXAMPLES=ON \
	-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
	-D BUILD_EXAMPLES=ON ..

# For installation without GTK and explicit python location pointers

$ sudo cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D WITH_GTK=OFF \
	-D WITH_GTK3=OFF \
	-D WITH_TBB=ON \
	-D BUILD_NEW_PYTHON_SUPPORT=ON \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D PYTHON_EXECUTABLE=/usr/bin/python3.5 \
	-D WITH_V4L=ON \
	-D WITH_QT=ON \
	-D WITH_OPENGL=ON \
	-D PYTHON_PACKAGES=/usr/local/lib/python3.5/dist-packages/ \
	-D PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so.1 \
	-D PYTHON_INCLUDE_DIR=/usr/include/python3.5m/ \
	-D INSTALL_C_EXAMPLES=ON \
	-D INSTALL_PYTHON_EXAMPLES=ON \
	-D OPENCV_EXTRA_MODULES_PATH=/home/info/opencv_contrib/modules \
	-D BUILD_PROTOBUF=OFF \
	-D UPDATE_PROTO_FILES=ON \
	-D BUILD_EXAMPLES=ON ..

# Install OpenCV in /usr/local/lib/python3.5/dist-packages/ folder
$ sudo make -j $(nproc --all)
$ sudo make install
$ sudo ldconfig

python3 -c "import cv2"

# Rename the site package to cv2 for import into python as cv2
cd /usr/local/lib/python3.5/dist-packages
ls
# Get the file name for python binding file. It looks something like: cv2.cpython-35m-x86_64-linux-gnu.so 
$ cd ~/.virtualenvs/OpenCV/lib/python3.5/site-packages/
$ ln -s /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-x86_64-linux-gnu.so cv2.so
$ deactivate
$ workon OpenCV
# Miscellaneous instructions
# Get linux version
lsb_release -a
# To generate a symbolic link
$ sudo ln -s [source_location]  [target_location]
# Install gtk3 and all-dev packages 
$ sudo apt-get install libgtk-3-dev
$ libpython3-all-dev 
# Install ccache
$ sudo apt-get install -y ccache
# Prepend ccache into the PATH
$ echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc
# Source bashrc to test the new PATH
$ source ~/.bashrc && echo $PATH
# Python3 find inlude path
python3 -c "from distutils.sysconfig import get_python_inc \
	get_python_inc()"
-- OR --
$ python3
>>> from distutils.sysconfig import get_python_inc
>>> get_python_inc() 
>>> ctrl+D or exit()